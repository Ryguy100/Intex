<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Data</title>
    <link rel="stylesheet" href="/css/styles.css" />
  </head>
  <body>
    <!-- <iframe src="/files/smudata.csv" width="100%" height="400"></iframe> -->

    <nav>
      <a href="/">Home</a>
      <a href="/survey">Survey</a>
      <a href="/dashboard">Dashboard</a>
      <% if(user) { %>
        <div id="login-link" class="dropdown">
          <button class="dropbtn">Hello, <%= user.name%></button>
          <div class="dropdown-content">
            <a href="/editaccount"><form method="get" action="edit/<%= user.id %>/"><button style="border: none; background-color: white;" type="submit">Edit Account</button></form></a>
            <% if (user.isadmin) { %>
              <a href="/users">Edit Users</a>
              <% } %>
            <a href="/logout">Logout</a>
          </div>
        </div>
      </div>
      <% } else { %>
      <a id="login-link" href="/login">Log In</a>
      <% } %>
    </nav>

    <h1>Embedded CSV Viewer</h1>

    <div id="csv-container"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"></script>
    <script>
      // Replace 'your-csv-file.csv' with the actual path or URL of your CSV file
      const csvFilePath = "/files/smudata.csv";

      // Container for the CSV data
      const csvContainer = document.getElementById("csv-container");

      // Fetch the CSV file
      fetch(csvFilePath)
        .then((response) => response.text())
        .then((csvText) => {
          // Parse CSV using PapaParse library
          Papa.parse(csvText, {
            header: true, // Assuming the first row contains headers
            complete: (result) => {
              // Generate an HTML table
              const table = document.createElement("table");
              const headerRow = table.createTHead().insertRow(0);

              // Create header cells
              result.meta.fields.forEach((field) => {
                const th = document.createElement("th");
                th.textContent = field;
                headerRow.appendChild(th);
              });

              // Create data rows
              result.data.forEach((rowData) => {
                const tr = table.insertRow();
                result.meta.fields.forEach((field) => {
                  const td = tr.insertCell();
                  td.textContent = rowData[field];
                });
              });

              // Append the table to the container
              csvContainer.appendChild(table);
            },
          });
        })
        .catch((error) => console.error("Error fetching CSV:", error));
    </script>
  </body>
</html>
